<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>网关 on IARNO</title>
    <link>/tags/%E7%BD%91%E5%85%B3/</link>
    <description>Recent content in 网关 on IARNO</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>©2022 Arno.</copyright>
    <lastBuildDate>Thu, 15 Jul 2021 21:10:57 +0800</lastBuildDate>
    
        <atom:link href="/tags/%E7%BD%91%E5%85%B3/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Kong - 自定义插件开发(四)</title>
      <link>/article/plugin-dev4/</link>
      <pubDate>Thu, 15 Jul 2021 21:10:57 +0800</pubDate>
      
      <guid>/article/plugin-dev4/</guid>
      <description>&lt;p&gt;使用Go语言开发自定义插件。&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Kong - 自定义插件开发(三)</title>
      <link>/article/plugin-dev3/</link>
      <pubDate>Wed, 14 Jul 2021 21:10:57 +0800</pubDate>
      
      <guid>/article/plugin-dev3/</guid>
      <description>&lt;p&gt;使用自定义插件，Docker容器启动相关配置如下：&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Kong - 自定义插件开发(二)</title>
      <link>/article/plugin-dev2/</link>
      <pubDate>Tue, 13 Jul 2021 22:12:57 +0800</pubDate>
      
      <guid>/article/plugin-dev2/</guid>
      <description>生命周期 Kong 插件允许您在请求/响应或 tcp 流连接的生命周期的多个入口点注入自定义逻辑（在 Lua 中），因为它由 Kong 代理。为此，必须实现base_plugi</description>
      
    </item>
    
    <item>
      <title>Kong - 自定义插件开发(一)</title>
      <link>/article/plugin-dev1/</link>
      <pubDate>Tue, 13 Jul 2021 21:41:57 +0800</pubDate>
      
      <guid>/article/plugin-dev1/</guid>
      <description>介绍 将您的插件视为一组Lua 模块。本章中描述的每个文件都被视为一个单独的模块。如果它们的名称遵循以下约定，Kong 将检测并加载您的插件模块：</description>
      
    </item>
    
    <item>
      <title>centos7安装Postgresql</title>
      <link>/article/postgresql-centos/</link>
      <pubDate>Tue, 17 Nov 2020 22:22:01 +0800</pubDate>
      
      <guid>/article/postgresql-centos/</guid>
      <description>&lt;h2 id=&#34;1进入官网下载所需版本&#34;&gt;1、进入官网下载所需版本&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://www.postgresql.org/download/linux/redhat/&#34;&gt;https://www.postgresql.org/download/linux/redhat/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img  src=&#34;https://i.loli.net/2020/11/17/6yQwYKjJUbh89k3.png&#34;
        alt=&#34;image-20201117222643658&#34;/&gt;&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>centos7 安装kong网关</title>
      <link>/article/kong-centos/</link>
      <pubDate>Sat, 14 Nov 2020 21:19:05 +0800</pubDate>
      
      <guid>/article/kong-centos/</guid>
      <description>&lt;h2 id=&#34;下载安装包&#34;&gt;下载安装包：&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://bintray.com/kong/kong-community-edition-rpm/download_file?file_path=centos/7/kong-community-edition-1.0.2.el7.noarch.rpm&#34;&gt;https://bintray.com/kong/kong-community-edition-rpm/download_file?file_path=centos/7/kong-community-edition-1.0.2.el7.noarch.rpm&lt;/a&gt;&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Kong网关配置负载均衡</title>
      <link>/article/upstream/</link>
      <pubDate>Tue, 27 Oct 2020 23:37:50 +0800</pubDate>
      
      <guid>/article/upstream/</guid>
      <description>环境说明 注：由于docker network原因，宿主机127.0.0.1可能会访问不到，可直接使用外网域名+端口 # 开放两个测试的微服务接口 http://myhost1:8881</description>
      
    </item>
    
    <item>
      <title>Konga 插件使用案例</title>
      <link>/article/kong-plugins/</link>
      <pubDate>Wed, 21 Oct 2020 22:41:57 +0800</pubDate>
      
      <guid>/article/kong-plugins/</guid>
      <description>CREATE CONSUMER Cerdentials 默认为所有consumer 创建 例： Username: test Password：test Route 添加插件 添加 Basic Auth 插件 添加成功 Postman 发送请求 注：header中的 Autho</description>
      
    </item>
    
    <item>
      <title>Konga使用</title>
      <link>/article/konga/</link>
      <pubDate>Fri, 16 Oct 2020 21:55:17 +0800</pubDate>
      
      <guid>/article/konga/</guid>
      <description>konga使用 konga安装请参考Docker安装kong网关 Url：http://127.0.0.1:1337 注册账号并登陆平台 配置DAS</description>
      
    </item>
    
    <item>
      <title>Docker安装Kong网关</title>
      <link>/article/docker-kong/</link>
      <pubDate>Fri, 16 Oct 2020 21:47:24 +0800</pubDate>
      
      <guid>/article/docker-kong/</guid>
      <description>创建Docker network $ docker network create kong-net 创建数据库 本案例使用的是PostgreSQL数据库 Cassandra数据库 $ docker run -d --name kong-database \ --network=kong-net \ -p 9042:9042 \ cassandra:3 Postgr</description>
      
    </item>
    
  </channel>
</rss>
