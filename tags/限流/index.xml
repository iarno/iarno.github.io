<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>限流 on IARNO</title>
    <link>/tags/%E9%99%90%E6%B5%81/</link>
    <description>Recent content in 限流 on IARNO</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>©2024 IARNO</copyright>
    <lastBuildDate>Wed, 21 Apr 2021 23:06:53 +0800</lastBuildDate>
    
        <atom:link href="/tags/%E9%99%90%E6%B5%81/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>限流算法实践</title>
      <link>/article/rate-limiting/</link>
      <pubDate>Wed, 21 Apr 2021 23:06:53 +0800</pubDate>
      
      <guid>/article/rate-limiting/</guid>
      <description>&lt;p&gt;本文主要介绍了四种限流算法：固定窗口计数器算法、滑动窗口计数算法、漏桶算法、令牌桶算法，并通过Lua脚本和Redis实现了令牌桶算法。文章详细解释了如何使用Redis的SCRIPT LOAD和EVALSHA命令来执行限流逻辑，并通过返回值判断是否触发限流行为。最后，文章对四种算法进行了比较和总结，认为令牌桶算法是一种相对完美的限流算法，适用于大多数限流场景。&lt;/p&gt;</description>
      
    </item>
    
  </channel>
</rss>
