<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>内存泄漏 on IARNO</title>
    <link>/tags/%E5%86%85%E5%AD%98%E6%B3%84%E6%BC%8F/</link>
    <description>Recent content in 内存泄漏 on IARNO</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>©2024 IARNO</copyright>
    <lastBuildDate>Mon, 28 Dec 2020 19:46:37 +0800</lastBuildDate>
    
        <atom:link href="/tags/%E5%86%85%E5%AD%98%E6%B3%84%E6%BC%8F/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Gin pprof性能分析</title>
      <link>/article/pprof/</link>
      <pubDate>Mon, 28 Dec 2020 19:46:37 +0800</pubDate>
      
      <guid>/article/pprof/</guid>
      <description>&lt;p&gt;这篇文章介绍了如何使用Gin pprof进行Go语言的性能分析。首先，通过导入github.com/DeanThompson/ginpprof包并使用ginpprof.Wrapper(router)将其集成到gin框架中。然后，通过命令行工具go tool pprof获取和分析程序的性能数据。文章还提供了如何使用top命令查看当前内存使用情况，并建议定期使用此命令以检测是否存在内存持续增长的情况。最后，文章提供了两个参考链接，供读者深入学习。&lt;/p&gt;</description>
      
    </item>
    
  </channel>
</rss>
