<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Go on IARNO</title>
    <link>/categories/go/</link>
    <description>Recent content in Go on IARNO</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>©2023 IARNO</copyright>
    <lastBuildDate>Sat, 25 Feb 2023 21:00:37 +0800</lastBuildDate>
    
        <atom:link href="/categories/go/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>gin Bind 参数绑定</title>
      <link>/article/gin-should-binding/</link>
      <pubDate>Sat, 25 Feb 2023 21:00:37 +0800</pubDate>
      
      <guid>/article/gin-should-binding/</guid>
      <description>&lt;p&gt;gin Bind 参数绑定。&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>gin binding tag</title>
      <link>/article/binding-tag/</link>
      <pubDate>Sat, 25 Feb 2023 20:40:37 +0800</pubDate>
      
      <guid>/article/binding-tag/</guid>
      <description>&lt;p&gt;golang binding tag。&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>golang连接mysql数据库导出csv文件</title>
      <link>/article/export-csv/</link>
      <pubDate>Sat, 25 Feb 2023 19:30:37 +0800</pubDate>
      
      <guid>/article/export-csv/</guid>
      <description>&lt;p&gt;golang连接mysql数据库导出csv文件。&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>gin proxy代理</title>
      <link>/article/gin-proxy/</link>
      <pubDate>Thu, 24 Nov 2022 18:30:37 +0800</pubDate>
      
      <guid>/article/gin-proxy/</guid>
      <description>&lt;p&gt;gin使用&lt;code&gt;httputil.NewSingleHostReverseProxy&lt;/code&gt;实现proxy服务代理。&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>gin当请求对象为数组时，binding不生效问题解决</title>
      <link>/article/gin-binding/</link>
      <pubDate>Thu, 24 Nov 2022 18:30:37 +0800</pubDate>
      
      <guid>/article/gin-binding/</guid>
      <description>&lt;p&gt;gin当请求对象为数组时，binding不生效问题解决。&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Gomonkey测试框架</title>
      <link>/article/gomonkey/</link>
      <pubDate>Mon, 27 Jun 2022 22:25:37 +0800</pubDate>
      
      <guid>/article/gomonkey/</guid>
      <description>&lt;p&gt;Golang 单元测试工具。&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>GoConvey测试框架</title>
      <link>/article/goconvey/</link>
      <pubDate>Mon, 27 Jun 2022 21:58:37 +0800</pubDate>
      
      <guid>/article/goconvey/</guid>
      <description>&lt;p&gt;GoConvey是一款针对Golang的测试框架&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Golang json 性能分析</title>
      <link>/article/golang-json/</link>
      <pubDate>Wed, 22 Jun 2022 21:45:37 +0800</pubDate>
      
      <guid>/article/golang-json/</guid>
      <description>&lt;p&gt;Json 作为一种重要的数据格式，具有良好的可读性以及自描述性，广泛地应用在各种数据传输场景中。&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Golang benchmark 性能测试</title>
      <link>/article/benchmark/</link>
      <pubDate>Wed, 22 Jun 2022 21:33:37 +0800</pubDate>
      
      <guid>/article/benchmark/</guid>
      <description>&lt;p&gt;基准测试是测量一个程序在固定工作负载下的性能，Go语言也提供了可以支持基准性能测试的&lt;code&gt;benchmark&lt;/code&gt;。&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Gin pprof性能分析</title>
      <link>/article/pprof/</link>
      <pubDate>Mon, 28 Dec 2020 19:46:37 +0800</pubDate>
      
      <guid>/article/pprof/</guid>
      <description>&lt;h2 id=&#34;pprof&#34;&gt;pprof&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 导入包
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
  &lt;span class=&#34;s&#34;&gt;&amp;#34;github.com/DeanThompson/ginpprof&amp;#34;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;


&lt;span class=&#34;c1&#34;&gt;// gin框架直接集成
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;router&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;gin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;New&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;ginpprof&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Wrapper&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;router&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
      
    </item>
    
    <item>
      <title>Go grpc案例</title>
      <link>/article/grpc/</link>
      <pubDate>Mon, 28 Dec 2020 19:46:28 +0800</pubDate>
      
      <guid>/article/grpc/</guid>
      <description>相关定义 在.proto文件中定义一个服务。 使用protocol buffer编译器生成客户端和服务端代码。 使用gRPC的Go API为你的服务写</description>
      
    </item>
    
    <item>
      <title>Golang 协程异步请求</title>
      <link>/article/sync_wait_group/</link>
      <pubDate>Mon, 28 Dec 2020 19:46:18 +0800</pubDate>
      
      <guid>/article/sync_wait_group/</guid>
      <description>&lt;p&gt;协程（coroutine）是Go语言中的轻量级线程实现，由Go运行时（runtime）管理。&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>通过图片url获取图片尺寸大小</title>
      <link>/article/image-url-size/</link>
      <pubDate>Wed, 28 Oct 2020 22:37:06 +0800</pubDate>
      
      <guid>/article/image-url-size/</guid>
      <description>通过图片url获取图片尺寸大小(size) 问题 当使用image.Decode时报image: unknown format· 这是因为忘记引入包import _</description>
      
    </item>
    
    <item>
      <title>Golang excel导出</title>
      <link>/article/golang-excel%E5%AF%BC%E5%87%BA/</link>
      <pubDate>Sat, 29 Aug 2020 07:47:20 +0800</pubDate>
      
      <guid>/article/golang-excel%E5%AF%BC%E5%87%BA/</guid>
      <description>&lt;h2 id=&#34;excel-导出&#34;&gt;Excel 导出&lt;/h2&gt;
&lt;h4 id=&#34;github-地址&#34;&gt;Github 地址&lt;/h4&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/360EntSecGroup-Skylar/excelize&#34;&gt;https://github.com/360EntSecGroup-Skylar/excelize&lt;/a&gt;&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Golang 蓄水池抽样法</title>
      <link>/article/golang-%E8%93%84%E6%B0%B4%E6%B1%A0%E6%8A%BD%E6%A0%B7%E6%B3%95/</link>
      <pubDate>Sat, 29 Aug 2020 07:47:20 +0800</pubDate>
      
      <guid>/article/golang-%E8%93%84%E6%B0%B4%E6%B1%A0%E6%8A%BD%E6%A0%B7%E6%B3%95/</guid>
      <description>&lt;p&gt;使用蓄水池抽样法，等概率随机抽取。&lt;/p&gt;
&lt;h2 id=&#34;相关文章&#34;&gt;相关文章&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://www.cnblogs.com/snowInPluto/p/5996269.html&#34;&gt;https://www.cnblogs.com/snowInPluto/p/5996269.html&lt;/a&gt;&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>supervisor管理golang程序</title>
      <link>/article/supervisor%E7%AE%A1%E7%90%86golang%E7%A8%8B%E5%BA%8F/</link>
      <pubDate>Sat, 29 Aug 2020 07:47:20 +0800</pubDate>
      
      <guid>/article/supervisor%E7%AE%A1%E7%90%86golang%E7%A8%8B%E5%BA%8F/</guid>
      <description>&lt;p&gt;最近在鼓捣golang守护进程的实现，无意发现了supervisor这个有意思的东西。supervisor是一个unix的系统进程管理软件，可以用它来管理apache、nginx等服务，若服务挂了可以让它们自动重启。当然也可以用来实现golang的守护进程，下面描述下具体实现。&lt;/p&gt;</description>
      
    </item>
    
  </channel>
</rss>
